1748. Sum of Unique Elements
You are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array.
Return the sum of all the unique elements of nums.
Example 1:
Input: nums = [1,2,3,2]
Output: 4
Explanation: The unique elements are [1,3], and the sum is 4.
Example 2:
Input: nums = [1,1,1,1,1]
Output: 0
Explanation: There are no unique elements, and the sum is 0.
Example 3:
Input: nums = [1,2,3,4,5]
Output: 15
Explanation: The unique elements are [1,2,3,4,5], and the sum is 15.
METHOD-1
Approach:- used hashmap and calculated frequency later accesses every key and checked if the value ==1 if so added to sum.
class Solution {
    public int sumOfUnique(int[] nums) {
        int s=0;
        HashMap<Integer,Integer>a=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            if(!a.containsKey(nums[i])){
                a.put(nums[i],1);
            }
            else{
                a.put(nums[i],a.get(nums[i])+1);
            }
        }
        for(int key:a.keySet()){
            if(a.get(key)==1){
                s+=key;
            }
            
        }
        return s;
    }
}
METHOD:-2
APROACH:- Entered all elements to hashset later added to arrayList(because hashset doesnot have get() to make it ease taken ArrayList) every elemnt checked with entire elements in the collection if the count is one then that number is added to the sum and at last return the sum.

class Solution {
    public int sumOfUnique(int[] nums) {
 HashSet<Integer>a=new HashSet<>();
        for(int i=0;i<nums.length;i++){
            a.add(nums[i]);
        }
        ArrayList<Integer>b=new ArrayList<>(a);
        int d;
        int s=0;
        int c=0;
        for(int i=0;i<a.size();i++){
            d=b.get(i);
            c=0;
            for(int j=0;j<nums.length;j++){
                if(d==nums[j]){
                    c++;
                }
            }
            if(c==1){
                s+=d;
            }
        }
        
        return s;
    }
}
