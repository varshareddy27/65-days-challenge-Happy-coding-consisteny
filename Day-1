Java DSA
overview
-----------
1.1 Basics of language
1.2 patterns problem
1.3 Java collection framework
1.4 Basic Math's problem

made sum of digits,rev and few patterns apart
program to print A-Z --1
a-z 0
apart -1
code----
import java.util.Scanner;

public class Solution {
    
    public static void main(String[] args) {
        // Write your code here
        Scanner sc=new Scanner(System.in);
        char ch=sc.next().charAt(0);
                if(ch>=65&& ch<=90){
            System.out.println("1");
        }
        else if(ch>=97&& ch<=122){
             System.out.println("0");
        }
        else{
             System.out.println("-1");
        }

    }
}
----
print int -4
long-8
floar-4
double-8
character-1


code:----
public class Solution {
    public static int dataTypes(String type) {
        // Write your code here
        if(type.equals("Integer")){
            return 4;
        }
         else if(type.equals("Long")){
            return 8;
        }
        else if(type.equals("Float")){
            return 4;
        }
        else if(type.equals("Double")){
            return 8;
        }
        else if(type.equals("Character")){
            return 1;
        }
        return 0;
    }
}
-------------------------------------
if else 
if statement’ is used to execute a block of code only if a certain condition is met. It allows us to conditionally execute code based on whether the specified condition is true.
else statement’, on the other hand, is an optional companion to the if statement. It specifies what code to execute if the condition in the if statement is not met (i.e. if it is false).

a,b greater,smaller,equal
code:
public class Solution {
    public static String compareIfElse(int a, int b) {
        if(a>b){
            return "greater";
        }
        else if(a==b){
            return "equal";
        }
        else{
            return "smaller";
        }
        
    }
}
------------
ch 1 means area having one value calculating area circle
ch 2 means area having two values l,b using switch
public class Solution {
    public static double areaSwitchCase(int ch, double []a) {
       double area=0.0;
       switch(ch){
           case 1:{
           area= Math.PI*a[0]*a[0];
           break;
            }
       case 2:{
       area=a[0]*a[1];
       break;
       }
       }return area;
    }
}
----------------
For loop
execute a specific block of code repeatedly. It’s especially useful when you want to perform the same task multiple times without duplicating your code
Initialization: You declare and initialize a variable that serves as a counter. This step only happens once at the beginning.
Condition: You specify a condition that determines when the loop should stop executing.
Increment/Decrement: You define how the counter variable changes after each iteration.
fib
import java.util.*;
public class Solution {
	public static int fib(int n){
if(n==1||n==2){
	return 1;
}
return fib(n-1)+fib(n-2);
	}

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);

int n=sc.nextInt();
System.out.print(fib(n));
		
	}

}



-------------------
sum of even and odd numbers
import java.util.*;
public class Main {
	
	public static void main(String[] args) {
		// Write your code here
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
	int o=0,e=0,r;
	while(n>0)

{
	r=n%10;
	if(r%2==0){
		e+=r;
	}
	else{
		o+=r;
	}
	n=n/10;

}
System.out.print(e+" "+o);	
}
}

