factors:----
 import java.util.*;
public class Main
{	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int c=0;
		for(int i=1;i<=Math.sqrt(n);i++){
		    if(n%i==0){
		        System.out.println(i);
		        
		        if(n/i!=i){
		             System.out.println(n/i);
		        }}}}}
-----------------------------------------------------------------------------------------------------------------------------------------------
factors of given num
n=15 if 3,5
import java.util.*;
public class Main
{	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int c=0;
	    for(int i=2;i<=Math.sqrt(n);i++){
	        if(n%i==0){
	            System.out.println(i);
	            if(n/i!=i){
	            System.out.println(n/i);
	        }}}
	       }}
---------------------------------------------------
find no of factors of a give number
import java.util.*;
public class Main
{	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int c=0;
	    for(int i=1;i<=Math.sqrt(n);i++){
	        if(n%i==0){
	            c++;
	        }
	    }
	    System.out.println(2*c);
	       }}
---------------------------------------------------------------
Armstrong number
import java.util.*;
import java.lang.*;
public class Main
{	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int t=n;
	    int num=n;
	    int c=0,s=0;
	    int rem;
	    while(n>0){
	       n/=10;
	        c++; //counting no of digits }
	    while(num>0){
	        rem=num%10;
	        s=s+(int)Math.pow(rem,c);
	        num/=10;
	    }
	    if(s==t){
	        System.out.println("Armstr");
	    }
	    else{
	        System.out.println("not a Armstr");
	    }
	    
	       }}
		  =----------------------------------------------
strong number or not :--sum of each digit factorial is = to that num
import java.util.*;
import java.lang.*;
public class Main
{	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int num=sc.nextInt();
	    int n=num;
	    int rem,s=0;
	    while(num>0){
	        int fact=1;
	        rem=num%10;
	        for(int i=1;i<=rem;i++){
	            fact=fact*i;
	        }
	        num/=10;
	        s=s+fact;
	    }
	    if(n==s){
	        System.out.println("st");
	    }
	    else{
	        System.out.println("nst");
	    }
	       }}
		  ---------------------------------------------------
not abundant
------------------------
import java.util.*;
import java.lang.*;
public class Main
{	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    int num=sc.nextInt();
	    int n=num;
	    int s=0;
	    for(int i=1;i<=num/2;i++){
	        if(num%i==0){
	            s=s+i;
	            
	        }
	    }
	    if(s>n){
	        System.out.println("abd");
	    }
	    else{
	        System.out.println("not abd");
	    }
	       }}
		--------------------------------------------------
number,upper,lower.digit
import java.util.Scanner;

public class CharacterTypeChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter a character: ");
        char inputChar = scanner.next().charAt(0);

        int asciiValue = (int) inputChar;

        if (asciiValue >= 65 && asciiValue <= 90) {
            System.out.println("Uppercase letter");
        } else if (asciiValue >= 97 && asciiValue <= 122) {
            System.out.println("Lowercase letter");
        } else if (asciiValue >= 48 && asciiValue <= 57) {
            System.out.println("Number");
        } else {
            System.out.println("Symbol");
        }

        scanner.close();
    }
}
---------------------
Dora is very much interested in gardening and she decides to plant more trees in her garden. She plants trees in the order of rows and columns. She numbered the trees in column wise order. She planted the mango trees only in the second column from both first and last. But later when the trees grew up, she forgot where she planted mango trees. So help her find out whether the given tree number is a number of mango trees or not. Display whether “It is a mango tree” or “It is not a mango tree”.

Input Format

Input consists of 3 integers. First input corresponds to the number of rows. Second input corresponds to the number of columns. Third input corresponds to the tree number.

Constraints

None

Output Format

print mentioned output

Sample Input 0

5
5
20
Sample Output 0

It is a mango tree
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
  Scanner scanner = new Scanner(System.in);
        int rows = scanner.nextInt();
        int columns = scanner.nextInt();
        int treeNumber = scanner.nextInt();
        if ((treeNumber % columns == 2 ||treeNumber%columns == 0)&&
            (treeNumber >= 2 && treeNumber <= (rows * columns - 1) && treeNumber % columns != 1)) {
            System.out.println("It is a mango tree");
        } else {
            System.out.println("It is not a mango tree");
        }
    }
}
--------------------------------------------------------------
program to swap first and last digit of a number
tc-1 1234
o/p   4231

import java.util.*;

public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int d=(int)Math.log10(n);
		int f=n/(int)Math.pow(10,d);
		int l=n%10;
		int a=f*(int)Math.pow(10,d);
		int b=n%a;
		n=b/10;//for middle elements 23
		int r=l*(int)Math.pow(10,d)+n*10+f;
		System.out.println(r);
	}
}
-----------------------------------------------------------------------
import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int a[]=new int [4];
		int b[]=new int [4];
		int r,i=0;
		while(n!=0){
		    r=n%2;
		    n/=2;
		    a[i]=r;
		    i++;
		}int j=0;
		for(int k=a.length-1;k>=0;k--){
		    b[j]=a[k];
		    j++;
		}
		for(int m=0;m<b.length;m++){
		    System.out.print(b[m]);
		}
	}
}

optimise this
ChatGPT
Your code is already quite concise, but we can simplify it a bit. Instead of using two arrays (a and b), you can directly print the binary digits without storing them in a separate array. Also, you can use a for loop to print the elements in reverse order directly. Here's an optimized version:

java
Copy code
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        for (int i = 31; i >= 0; i--) {
            System.out.print((n >> i) & 1);
        }
    }
}
In this version, I'm using bitwise operations (>> and &) to extract individual bits from the integer n. The loop runs from 31 to 0 (since integers in Java are 32 bits), and it prints the binary representation of the number without the need for arrays.







